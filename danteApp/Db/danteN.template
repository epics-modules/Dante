# Database for Dante MCAs
# Mark Rivers
# August 26, 2019
#
# This database gets loaded once for each Dante board.
# It contains records that control a single board.
# dante.template gets loaded once for each system.

record(ao,"$(P)$(R)MaxEnergy") {
    field(DESC,"Max energy")
    field(PINI,"YES")
    field(PREC,"2")
    field(VAL,"40")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteMaxEnergy")
}

record(ai,"$(P)$(R)MaxEnergy_RBV") {
    field(DESC,"Max energy")
    field(PREC,"2")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteMaxEnergy")
    field(SCAN, "I/O Intr")
}

######################
# Runtime statistics #
######################

record(ai,"$(P)$(R)InputCountRate") {
    field(DESC,"ICR")
    field(PREC,"2")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteInputCountRate")
    field(SCAN, "I/O Intr")
}

record(ai,"$(P)$(R)OutputCountRate") {
    field(DESC,"OCR")
    field(PREC,"2")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteOutputCountRate")
    field(SCAN, "I/O Intr")
}

record(ai,"$(P)$(R)LastTimeStamp") {
    field(DESC,"Last time stamp")
    field(PREC,"2")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteLastTimeStamp")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)Triggers") {
    field(DESC,"Triggers")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR))DanteTriggers")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)Events") {
    field(DESC,"Events")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteEvents")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)FastDeadTime") {
    field(DESC,"EdgeDT")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteEdgeDT")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)F1DeadTime") {
    field(DESC,"Filt1DT")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteFilt1DT")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)ZeroCounts") {
    field(DESC,"Zero counts")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteZeroCounts")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)BaselineCount") {
    field(DESC,"Baselines value")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteBaselinesValue")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)PileUp") {
    field(DESC,"PUP value")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DantePUPValue")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)F1PileUp") {
    field(DESC,"PUP F1 value")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DantePUPF1Value")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)NotF1PileUp") {
    field(DESC,"PUP Not F1 value")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DantePUPNotF1Value")
    field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)ResetCounts") {
    field(DESC,"Reset counter value")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteResetCounterValue")
    field(SCAN, "I/O Intr")
}


############################
# Configuration parameters #
############################

record(ao,"$(P)$(R)FastThreshold") {
    field(DESC,"Fast filter threshold")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"0.1")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteFastFilterThreshold")
}

record(ai,"$(P)$(R)FastThreshold_RBV") {
    field(DESC,"Fast filter threshold")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteFastFilterThreshold")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)EnergyThreshold") {
    field(DESC,"Energy filter threshold")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteEnergyFilterThreshold")
}

record(ai,"$(P)$(R)EnergyThreshold_RBV") {
    field(DESC,"Energy filter threshold")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteEnergyFilterThreshold")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)BaselineThreshold") {
    field(DESC,"Energy baseline threshold")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteEnergyBaselineThreshold")
}

record(ai,"$(P)$(R)BaselineThreshold_RBV") {
    field(DESC,"Energy baseline threshold")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteEnergyBaselineThreshold")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)MaxRiseTime") {
    field(DESC,"Max rise time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"20")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteMaxRiseTime")
}

record(ai,"$(P)$(R)MaxRiseTime_RBV") {
    field(DESC,"Max rise time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteMaxRiseTime")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)Gain") {
    field(DESC,"Gain")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"1")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteGain")
}

record(ai,"$(P)$(R)Gain_RBV") {
    field(DESC,"Gain")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteGain")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)PeakingTime") {
    field(DESC,"Peaking time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"2")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DantePeakingTime")
}

record(ai,"$(P)$(R)PeakingTime_RBV") {
    field(DESC,"Peaking time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DantePeakingTime")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)MaxPeakingTime") {
    field(DESC,"Max peaking time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"2")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteMaxPeakingTime")
}

record(ai,"$(P)$(R)MaxPeakingTime_RBV") {
    field(DESC,"Max peaking time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteMaxPeakingTime")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)FastPeakingTime") {
    field(DESC,"Edge peaking time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"2")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteEdgePeakingTime")
}

record(ai,"$(P)$(R)FastPeakingTime_RBV") {
    field(DESC,"Edge peaking time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteEdgePeakingTime")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)FlatTopTime") {
    field(DESC,"Flat top time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteFlatTop")
}

record(ai,"$(P)$(R)FlatTopTime_RBV") {
    field(DESC,"Flat top time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteFlatTop")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)FastFlatTopTime") {
    field(DESC,"Edge flat top time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteEdgeFlatTop")
}

record(ai,"$(P)$(R)FastFlatTopTime_RBV") {
    field(DESC,"Edge flat top time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteEdgeFlatTop")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)ResetRecoveryTime") {
    field(DESC,"Reset recovery time")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"2")
    field(DRVL, ".008")
    field(DRVH, "134217.72")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteResetRecoveryTime")
}

record(ai,"$(P)$(R)ResetRecoveryTime_RBV") {
    field(DESC,"Reset recovery time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteResetRecoveryTime")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)ZeroPeakFreq") {
    field(DESC,"Zero peak frequency")
    field(PINI,"YES")
    field(PREC,"1")
    field(VAL,"2")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteZeroPeakFreq")
}

record(ai,"$(P)$(R)ZeroPeakFreq_RBV") {
    field(DESC,"Zero peak frequency")
    field(PREC,"1")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteZeroPeakFreq")
    field(SCAN, "I/O Intr")
}

record(longout,"$(P)$(R)BaselineSamples") {
    field(DESC,"Baseline samples")
    field(PINI,"YES")
    field(DTYP, "asynInt32")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteBaselineSamples")
}

record(longin,"$(P)$(R)BaselineSamples_RBV") {
    field(DESC,"Baseline samples")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteBaselineSamples")
    field(SCAN, "I/O Intr")
}

record(bo,"$(P)$(R)InputPolarity") {
    field(DESC,"Inverted input")
    field(PINI,"YES")
    field(ZNAM,"Pos.")
    field(ONAM,"Neg.")
    field(DTYP, "asynInt32")
    field(OUT,"@asyn($(PORT),0)DanteInvertedInput")
}

record(bi,"$(P)$(R)InputPolarity_RBV") {
    field(DESC,"Inverted input")
    field(ZNAM,"Pos.")
    field(ONAM,"Neg.")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),0)DanteInvertedInput")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)TimeConstant") {
    field(DESC,"Time constant")
    field(PINI,"YES")
    field(PREC,"3")
    field(VAL,"2")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteTimeConstant")
}

record(ai,"$(P)$(R)TimeConstant_RBV") {
    field(DESC,"Time constant")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteTimeConstant")
    field(SCAN, "I/O Intr")
}

record(longout,"$(P)$(R)BaseOffset") {
    field(DESC,"Base offset")
    field(PINI,"YES")
    field(DTYP, "asynInt32")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteBaseOffset")
}

record(longin,"$(P)$(R)BaseOffset_RBV") {
    field(DESC,"Base offset")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteBaseOffset")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)OverflowRecoveryTime") {
    field(DESC,"Overflow recovery time")
    field(PINI,"YES")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteOverflowRecoveryTime")
}

record(ai,"$(P)$(R)OverflowRecoveryTime_RBV") {
    field(DESC,"Overflow recovery time")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteOverflowRecoveryTime")
    field(SCAN, "I/O Intr")
}

record(longout,"$(P)$(R)ResetThreshold") {
    field(DESC,"Reset threshold")
    field(PINI,"YES")
    field(DTYP, "asynInt32")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteResetThreshold")
}

record(longin,"$(P)$(R)ResetThreshold_RBV") {
    field(DESC,"Reset threshold")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteResetThreshold")
    field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)TailCoefficient") {
    field(DESC,"Tail coefficient")
    field(PINI,"YES")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteTailCoefficient")
}

record(ai,"$(P)$(R)TailCoefficient_RBV") {
    field(DESC,"Tail coefficient")
    field(PREC,"3")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT),$(ADDR))DanteTailCoefficient")
    field(SCAN, "I/O Intr")
}

record(mbbo,"$(P)$(R)InputMode") {
    field(DESC,"Input mode")
    field(PINI,"YES")
    field(ZRST,"DC_HighImp")
    field(ZRVL,"0")
    field(ONST,"DC_LowImp")
    field(ONVL,"1")
    field(TWST,"AC_Slow")
    field(TWVL,"2")
    field(THST,"AC_Fast")
    field(THVL,"3")
    field(DTYP, "asynInt32")
    field(OUT,"@asyn($(PORT),0)DanteInputMode")
}

record(mbbi,"$(P)$(R)InputMode_RBV") {
    field(DESC,"Input mode")
    field(ZRST,"DC_HighImp")
    field(ZRVL,"0")
    field(ONST,"DC_LowImp")
    field(ONVL,"1")
    field(TWST,"AC_Slow")
    field(TWVL,"2")
    field(THST,"AC_Fast")
    field(THVL,"3")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),0)DanteInputMode")
    field(SCAN, "I/O Intr")
}

record(longout,"$(P)$(R)AnalogOffset") {
    field(DESC,"Analog offset")
    field(PINI,"YES")
    field(DRVL, "0")
    field(DRVH, "255")
    field(VAL, "128")
    field(DTYP, "asynInt32")
    field(OUT,"@asyn($(PORT),$(ADDR))DanteAnalogOffset")
}

record(longin,"$(P)$(R)AnalogOffset_RBV") {
    field(DESC,"Analog offset")
    field(DTYP, "asynInt32")
    field(INP,"@asyn($(PORT),$(ADDR))DanteAnalogOffset")
    field(SCAN, "I/O Intr")
}


#############################
# Trace waveform parameters #
#############################

record(waveform, "$(P)$(R)TraceData") {
    field(DESC, "Trace data")
    field(DTYP, "asynInt32ArrayIn")
    field(PREC, "0")
    field(INP, "@asyn($(PORT),$(ADDR))DanteTraceData")
    field(NELM, "$(TRACE_LEN)")
    field(FTVL, "LONG")
    field(SCAN, "I/O Intr")
}
